import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { KuiView } from '../kui-view';
import { ActivatedRoute, Router } from '@angular/router';
import { KnoraConstants, SearchParamsService, SearchService } from '@knora/core';
var SearchResultsComponent = /** @class */ (function (_super) {
    tslib_1.__extends(SearchResultsComponent, _super);
    function SearchResultsComponent(_route, _searchService, _searchParamsService, _router) {
        var _this = _super.call(this, _route, _searchService, _searchParamsService, _router) || this;
        _this._route = _route;
        _this._searchService = _searchService;
        _this._searchParamsService = _searchParamsService;
        _this._router = _router;
        _this.KnoraConstants = KnoraConstants;
        _this.offset = 0;
        _this.maxOffset = 0;
        _this.result = [];
        _this.rerender = false;
        _this.isLoading = true;
        _this.errorMessage = undefined;
        _this.pagingLimit = 25;
        return _this;
    }
    SearchResultsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'kui-search-results',
                    template: "<div *ngIf=\"!rerender\">\n    <div *ngIf=\"numberOfAllResults !== 0 && result; else noResult\">\n        <h4>Number of results: {{numberOfAllResults}}</h4>\n        <mat-tab-group>\n            <mat-tab label=\"List\">\n                <kui-list-view [result]=\"result\" [ontologyInfo]=\"ontologyInfo\" [isLoading]=\"isLoading\"></kui-list-view>\n            </mat-tab>\n            <mat-tab label=\"Grid\">\n                <kui-grid-view [result]=\"result\" [ontologyInfo]=\"ontologyInfo\" [isLoading]=\"isLoading\"></kui-grid-view>\n            </mat-tab>\n            <mat-tab label=\"Table\">\n                <kui-table-view [result]=\"result\" [ontologyInfo]=\"ontologyInfo\" [isLoading]=\"isLoading\"></kui-table-view>\n            </mat-tab>\n            <mat-tab label=\"Gravsearch\">\n                <kui-graph-view></kui-graph-view>\n            </mat-tab>\n        </mat-tab-group>\n\n        <div class=\"load-panel\" *ngIf=\"result.length > 0\">\n            <button mat-flat-button color=\"primary\" class=\"link center\" (click)=\"loadMore(offset)\" *ngIf=\"offset < maxOffset\">Load more\n                <mat-icon>keyboard_arrow_down</mat-icon>\n            </button>\n        </div>\n\n    </div>\n\n    <!-- In case of 0 result -->\n    <ng-template #noResult>\n        <p>\n            <strong>No result</strong>\n        </p>\n    </ng-template>\n\n</div>\n\n<!-- Error message -->\n<div *ngIf=\"errorMessage\">\n    <p>There is an error: {{errorMessage}}</p>\n</div>",
                    styles: [".load-panel{width:100%}.load-panel .center{display:block;line-height:24px;margin:12px auto}"]
                },] },
    ];
    /** @nocollapse */
    SearchResultsComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: SearchService },
        { type: SearchParamsService },
        { type: Router }
    ]; };
    return SearchResultsComponent;
}(KuiView));
export { SearchResultsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLXJlc3VsdHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGtub3JhL3ZpZXdlci8iLCJzb3VyY2VzIjpbImxpYi92aWV3L3NlYXJjaC1yZXN1bHRzL3NlYXJjaC1yZXN1bHRzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxjQUFjLEVBQVUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFakUsT0FBTyxFQUlMLGNBQWMsRUFLZCxtQkFBbUIsRUFDbkIsYUFBYSxFQUNkLE1BQU0sYUFBYSxDQUFDO0FBRXJCO0lBMkM0QyxrREFBTztJQWlCakQsZ0NBQ1ksTUFBc0IsRUFDdEIsY0FBNkIsRUFDN0Isb0JBQXlDLEVBQ3pDLE9BQWU7UUFKM0IsWUFNRSxrQkFBTSxNQUFNLEVBQUUsY0FBYyxFQUFFLG9CQUFvQixFQUFFLE9BQU8sQ0FBQyxTQUM3RDtRQU5XLFlBQU0sR0FBTixNQUFNLENBQWdCO1FBQ3RCLG9CQUFjLEdBQWQsY0FBYyxDQUFlO1FBQzdCLDBCQUFvQixHQUFwQixvQkFBb0IsQ0FBcUI7UUFDekMsYUFBTyxHQUFQLE9BQU8sQ0FBUTtRQW5CM0Isb0JBQWMsR0FBRyxjQUFjLENBQUM7UUFDaEMsWUFBTSxHQUFXLENBQUMsQ0FBQztRQUNuQixlQUFTLEdBQVcsQ0FBQyxDQUFDO1FBRXRCLFlBQU0sR0FBbUIsRUFBRSxDQUFDO1FBRzVCLGNBQVEsR0FBWSxLQUFLLENBQUM7UUFHMUIsZUFBUyxHQUFHLElBQUksQ0FBQztRQUNqQixrQkFBWSxHQUFRLFNBQVMsQ0FBQztRQUU5QixpQkFBVyxHQUFXLEVBQUUsQ0FBQzs7SUFTekIsQ0FBQzs7Z0JBbkVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixRQUFRLEVBQUUsczlDQXNDTDtvQkFDTCxNQUFNLEVBQUUsQ0FBQyw2RkFBNkYsQ0FBQztpQkFDeEc7Ozs7Z0JBekRRLGNBQWM7Z0JBWXJCLGFBQWE7Z0JBRGIsbUJBQW1CO2dCQVhZLE1BQU07O0lBbUZ2Qyw2QkFBQztDQUFBLEFBcEVELENBMkM0QyxPQUFPLEdBeUJsRDtTQXpCWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgS3VpVmlldyB9IGZyb20gJy4uL2t1aS12aWV3JztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlLCBQYXJhbXMsIFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7XG4gIEFwaVNlcnZpY2VFcnJvcixcbiAgRXh0ZW5kZWRTZWFyY2hQYXJhbXMsXG4gIEdyYXZzZWFyY2hHZW5lcmF0aW9uU2VydmljZSxcbiAgS25vcmFDb25zdGFudHMsXG4gIE9udG9sb2d5Q2FjaGVTZXJ2aWNlLFxuICBPbnRvbG9neUluZm9ybWF0aW9uLFxuICBSZWFkUmVzb3VyY2UsXG4gIFJlYWRSZXNvdXJjZXNTZXF1ZW5jZSxcbiAgU2VhcmNoUGFyYW1zU2VydmljZSxcbiAgU2VhcmNoU2VydmljZVxufSBmcm9tICdAa25vcmEvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2t1aS1zZWFyY2gtcmVzdWx0cycsXG4gIHRlbXBsYXRlOiBgPGRpdiAqbmdJZj1cIiFyZXJlbmRlclwiPlxuICAgIDxkaXYgKm5nSWY9XCJudW1iZXJPZkFsbFJlc3VsdHMgIT09IDAgJiYgcmVzdWx0OyBlbHNlIG5vUmVzdWx0XCI+XG4gICAgICAgIDxoND5OdW1iZXIgb2YgcmVzdWx0czoge3tudW1iZXJPZkFsbFJlc3VsdHN9fTwvaDQ+XG4gICAgICAgIDxtYXQtdGFiLWdyb3VwPlxuICAgICAgICAgICAgPG1hdC10YWIgbGFiZWw9XCJMaXN0XCI+XG4gICAgICAgICAgICAgICAgPGt1aS1saXN0LXZpZXcgW3Jlc3VsdF09XCJyZXN1bHRcIiBbb250b2xvZ3lJbmZvXT1cIm9udG9sb2d5SW5mb1wiIFtpc0xvYWRpbmddPVwiaXNMb2FkaW5nXCI+PC9rdWktbGlzdC12aWV3PlxuICAgICAgICAgICAgPC9tYXQtdGFiPlxuICAgICAgICAgICAgPG1hdC10YWIgbGFiZWw9XCJHcmlkXCI+XG4gICAgICAgICAgICAgICAgPGt1aS1ncmlkLXZpZXcgW3Jlc3VsdF09XCJyZXN1bHRcIiBbb250b2xvZ3lJbmZvXT1cIm9udG9sb2d5SW5mb1wiIFtpc0xvYWRpbmddPVwiaXNMb2FkaW5nXCI+PC9rdWktZ3JpZC12aWV3PlxuICAgICAgICAgICAgPC9tYXQtdGFiPlxuICAgICAgICAgICAgPG1hdC10YWIgbGFiZWw9XCJUYWJsZVwiPlxuICAgICAgICAgICAgICAgIDxrdWktdGFibGUtdmlldyBbcmVzdWx0XT1cInJlc3VsdFwiIFtvbnRvbG9neUluZm9dPVwib250b2xvZ3lJbmZvXCIgW2lzTG9hZGluZ109XCJpc0xvYWRpbmdcIj48L2t1aS10YWJsZS12aWV3PlxuICAgICAgICAgICAgPC9tYXQtdGFiPlxuICAgICAgICAgICAgPG1hdC10YWIgbGFiZWw9XCJHcmF2c2VhcmNoXCI+XG4gICAgICAgICAgICAgICAgPGt1aS1ncmFwaC12aWV3Pjwva3VpLWdyYXBoLXZpZXc+XG4gICAgICAgICAgICA8L21hdC10YWI+XG4gICAgICAgIDwvbWF0LXRhYi1ncm91cD5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwibG9hZC1wYW5lbFwiICpuZ0lmPVwicmVzdWx0Lmxlbmd0aCA+IDBcIj5cbiAgICAgICAgICAgIDxidXR0b24gbWF0LWZsYXQtYnV0dG9uIGNvbG9yPVwicHJpbWFyeVwiIGNsYXNzPVwibGluayBjZW50ZXJcIiAoY2xpY2spPVwibG9hZE1vcmUob2Zmc2V0KVwiICpuZ0lmPVwib2Zmc2V0IDwgbWF4T2Zmc2V0XCI+TG9hZCBtb3JlXG4gICAgICAgICAgICAgICAgPG1hdC1pY29uPmtleWJvYXJkX2Fycm93X2Rvd248L21hdC1pY29uPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgPC9kaXY+XG5cbiAgICA8IS0tIEluIGNhc2Ugb2YgMCByZXN1bHQgLS0+XG4gICAgPG5nLXRlbXBsYXRlICNub1Jlc3VsdD5cbiAgICAgICAgPHA+XG4gICAgICAgICAgICA8c3Ryb25nPk5vIHJlc3VsdDwvc3Ryb25nPlxuICAgICAgICA8L3A+XG4gICAgPC9uZy10ZW1wbGF0ZT5cblxuPC9kaXY+XG5cbjwhLS0gRXJyb3IgbWVzc2FnZSAtLT5cbjxkaXYgKm5nSWY9XCJlcnJvck1lc3NhZ2VcIj5cbiAgICA8cD5UaGVyZSBpcyBhbiBlcnJvcjoge3tlcnJvck1lc3NhZ2V9fTwvcD5cbjwvZGl2PmAsXG4gIHN0eWxlczogW2AubG9hZC1wYW5lbHt3aWR0aDoxMDAlfS5sb2FkLXBhbmVsIC5jZW50ZXJ7ZGlzcGxheTpibG9jaztsaW5lLWhlaWdodDoyNHB4O21hcmdpbjoxMnB4IGF1dG99YF1cbn0pXG5leHBvcnQgY2xhc3MgU2VhcmNoUmVzdWx0c0NvbXBvbmVudCBleHRlbmRzIEt1aVZpZXcge1xuXG4gIEtub3JhQ29uc3RhbnRzID0gS25vcmFDb25zdGFudHM7XG4gIG9mZnNldDogbnVtYmVyID0gMDtcbiAgbWF4T2Zmc2V0OiBudW1iZXIgPSAwO1xuICBncmF2c2VhcmNoR2VuZXJhdG9yOiBFeHRlbmRlZFNlYXJjaFBhcmFtcztcbiAgcmVzdWx0OiBSZWFkUmVzb3VyY2VbXSA9IFtdO1xuICBvbnRvbG9neUluZm86IE9udG9sb2d5SW5mb3JtYXRpb247XG4gIG51bWJlck9mQWxsUmVzdWx0czogbnVtYmVyO1xuICByZXJlbmRlcjogYm9vbGVhbiA9IGZhbHNlO1xuICBzZWFyY2hRdWVyeTogc3RyaW5nO1xuICBzZWFyY2hNb2RlOiBzdHJpbmc7XG4gIGlzTG9hZGluZyA9IHRydWU7XG4gIGVycm9yTWVzc2FnZTogYW55ID0gdW5kZWZpbmVkO1xuICBuYXZpZ2F0aW9uU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gIHBhZ2luZ0xpbWl0OiBudW1iZXIgPSAyNTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgX3JvdXRlOiBBY3RpdmF0ZWRSb3V0ZSxcbiAgICBwcm90ZWN0ZWQgX3NlYXJjaFNlcnZpY2U6IFNlYXJjaFNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIF9zZWFyY2hQYXJhbXNTZXJ2aWNlOiBTZWFyY2hQYXJhbXNTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCBfcm91dGVyOiBSb3V0ZXJcbiAgKSB7XG4gICAgc3VwZXIoX3JvdXRlLCBfc2VhcmNoU2VydmljZSwgX3NlYXJjaFBhcmFtc1NlcnZpY2UsIF9yb3V0ZXIpO1xuICB9XG59XG4iXX0=